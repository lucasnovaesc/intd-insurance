services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: 1234
      POSTGRES_USER: postgres
      POSTGRES_DB: serviceproposal
    ports:
      - "5432:5432"
    networks:
      - contracting-proposal
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq-service:
    image: rabbitmq:3-management
    container_name: rabbitmq-service
    hostname: rabbitmq-service
    ports:
      - "5672:5672"    # para conexoes do RabbitMQ
      - "15672:15672"  # interface web
    networks:
      - contracting-proposal
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  service-proposal: #Producer
    build:
        context: C:/intd/src/ServiceProposal
        dockerfile: C:/intd/src/ServiceProposal/DockerFile
    image: service-proposal:1.2
    container_name: service-proposal
    ports:
      - "8080:8080"
    networks:
      - contracting-proposal
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq-service:
        condition: service_healthy

networks:
  contracting-proposal:
    driver: bridge  

volumes:
  postgres-data:
  rabbitmq-data:




